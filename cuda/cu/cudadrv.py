# generated by 'xml2py'
# flags 'cu.xml -c -d -v -l cuda'
from ctypes import *
from cuda.utils import get_lib

_libraries = {}
_libraries['cuda'] = get_lib('cuda')
STRING = c_char_p


CUDA_ERROR_NO_DEVICE = 100
CUDA_ERROR_FILE_NOT_FOUND = 301
CU_AD_FORMAT_UNSIGNED_INT16 = 2
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES = 701
CU_CTX_SCHED_YIELD = 2
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X = 2
CUDA_ERROR_NOT_MAPPED = 211
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING = 703
CU_AD_FORMAT_SIGNED_INT32 = 10
CUDA_ERROR_INVALID_IMAGE = 200
CUDA_ERROR_ALREADY_MAPPED = 208
CUDA_ERROR_LAUNCH_FAILED = 700
CUDA_ERROR_UNKNOWN = 999
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK = 8
CUDA_ERROR_CONTEXT_ALREADY_CURRENT = 202
CUDA_ERROR_ALREADY_ACQUIRED = 210
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y = 3
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y = 6
CUDA_ERROR_INVALID_SOURCE = 300
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP = 15
CU_CTX_FLAGS_MASK = 3
CUDA_ERROR_INVALID_DEVICE = 101
CU_AD_FORMAT_UNSIGNED_INT32 = 3
CU_DEVICE_ATTRIBUTE_WARP_SIZE = 10
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12
CU_DEVICE_ATTRIBUTE_CLOCK_RATE = 13
CU_TR_ADDRESS_MODE_WRAP = 0
CU_CTX_SCHED_MASK = 3
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT = 14
CUDA_ERROR_INVALID_VALUE = 1
CU_TR_FILTER_MODE_LINEAR = 1
CU_CTX_SCHED_AUTO = 0
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z = 7
CUDA_ERROR_MAP_FAILED = 205
CUDA_ERROR_INVALID_HANDLE = 400
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X = 5
CUDA_ERROR_UNMAP_FAILED = 206
CUDA_SUCCESS = 0
CUDA_ERROR_OUT_OF_MEMORY = 2
CUDA_ERROR_INVALID_CONTEXT = 201
CU_CTX_SCHED_SPIN = 1
CU_AD_FORMAT_HALF = 16
CU_AD_FORMAT_SIGNED_INT8 = 8
CU_AD_FORMAT_UNSIGNED_INT8 = 1
CUDA_ERROR_NOT_READY = 600
CUDA_ERROR_NOT_INITIALIZED = 3
CUDA_ERROR_NO_BINARY_FOR_GPU = 209
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1
CU_MEMORYTYPE_DEVICE = 2
CUDA_ERROR_ARRAY_IS_MAPPED = 207
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT = 16
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK = 12
CU_TR_ADDRESS_MODE_MIRROR = 2
CUDA_ERROR_DEINITIALIZED = 4
CU_AD_FORMAT_SIGNED_INT16 = 9
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY = 9
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z = 4
CU_TR_ADDRESS_MODE_CLAMP = 1
CU_MEMORYTYPE_HOST = 1
CU_TR_FILTER_MODE_POINT = 0
CU_AD_FORMAT_FLOAT = 32
CUDA_ERROR_LAUNCH_TIMEOUT = 702
CU_DEVICE_ATTRIBUTE_MAX_PITCH = 11
CU_MEMORYTYPE_ARRAY = 3
CUDA_ERROR_NOT_FOUND = 500
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8
CUdeviceptr = c_uint
CUdevice = c_int
# /usr/local/cuda/include/cuda.h 56
class CUctx_st(Structure):
    pass
CUctx_st._fields_ = [
    # /usr/local/cuda/include/cuda.h 56
]
CUcontext = POINTER(CUctx_st)
# /usr/local/cuda/include/cuda.h 57
class CUmod_st(Structure):
    pass
CUmod_st._fields_ = [
    # /usr/local/cuda/include/cuda.h 57
]
CUmodule = POINTER(CUmod_st)
# /usr/local/cuda/include/cuda.h 58
class CUfunc_st(Structure):
    pass
CUfunc_st._fields_ = [
    # /usr/local/cuda/include/cuda.h 58
]
CUfunction = POINTER(CUfunc_st)
# /usr/local/cuda/include/cuda.h 59
class CUarray_st(Structure):
    pass
CUarray_st._fields_ = [
    # /usr/local/cuda/include/cuda.h 59
]
CUarray = POINTER(CUarray_st)
# /usr/local/cuda/include/cuda.h 60
class CUtexref_st(Structure):
    pass
CUtexref = POINTER(CUtexref_st)
CUtexref_st._fields_ = [
    # /usr/local/cuda/include/cuda.h 60
]
# /usr/local/cuda/include/cuda.h 61
class CUevent_st(Structure):
    pass
CUevent_st._fields_ = [
    # /usr/local/cuda/include/cuda.h 61
]
CUevent = POINTER(CUevent_st)
# /usr/local/cuda/include/cuda.h 62
class CUstream_st(Structure):
    pass
CUstream_st._fields_ = [
    # /usr/local/cuda/include/cuda.h 62
]
CUstream = POINTER(CUstream_st)

# values for enumeration 'CUctx_flags_enum'
CUctx_flags_enum = c_int # enum
CUctx_flags = CUctx_flags_enum

# values for enumeration 'CUarray_format_enum'
CUarray_format_enum = c_int # enum
CUarray_format = CUarray_format_enum

# values for enumeration 'CUaddress_mode_enum'
CUaddress_mode_enum = c_int # enum
CUaddress_mode = CUaddress_mode_enum

# values for enumeration 'CUfilter_mode_enum'
CUfilter_mode_enum = c_int # enum
CUfilter_mode = CUfilter_mode_enum

# values for enumeration 'CUdevice_attribute_enum'
CUdevice_attribute_enum = c_int # enum
CUdevice_attribute = CUdevice_attribute_enum
# /usr/local/cuda/include/cuda.h 140
class CUdevprop_st(Structure):
    pass
CUdevprop_st._fields_ = [
    # /usr/local/cuda/include/cuda.h 140
    ('maxThreadsPerBlock', c_int),
    ('maxThreadsDim', c_int * 3),
    ('maxGridSize', c_int * 3),
    ('sharedMemPerBlock', c_int),
    ('totalConstantMemory', c_int),
    ('SIMDWidth', c_int),
    ('memPitch', c_int),
    ('regsPerBlock', c_int),
    ('clockRate', c_int),
    ('textureAlign', c_int),
]
CUdevprop = CUdevprop_st

# values for enumeration 'CUmemorytype_enum'
CUmemorytype_enum = c_int # enum
CUmemorytype = CUmemorytype_enum

# values for enumeration 'cudaError_enum'
cudaError_enum = c_int # enum
CUresult = cudaError_enum
# /usr/local/cuda/include/cuda.h 217
cuInit = _libraries['cuda'].cuInit
cuInit.restype = CUresult
# cuInit(Flags)
cuInit.argtypes = [c_uint]
cuInit.__doc__ = \
"""CUresult cuInit(unsigned int Flags)
/usr/local/cuda/include/cuda.h:217"""
# /usr/local/cuda/include/cuda.h 225
cuDeviceGet = _libraries['cuda'].cuDeviceGet
cuDeviceGet.restype = CUresult
# cuDeviceGet(device, ordinal)
cuDeviceGet.argtypes = [POINTER(CUdevice), c_int]
cuDeviceGet.__doc__ = \
"""CUresult cuDeviceGet(CUdevice * device, int ordinal)
/usr/local/cuda/include/cuda.h:225"""
# /usr/local/cuda/include/cuda.h 226
cuDeviceGetCount = _libraries['cuda'].cuDeviceGetCount
cuDeviceGetCount.restype = CUresult
# cuDeviceGetCount(count)
cuDeviceGetCount.argtypes = [POINTER(c_int)]
cuDeviceGetCount.__doc__ = \
"""CUresult cuDeviceGetCount(int * count)
/usr/local/cuda/include/cuda.h:226"""
# /usr/local/cuda/include/cuda.h 227
cuDeviceGetName = _libraries['cuda'].cuDeviceGetName
cuDeviceGetName.restype = CUresult
# cuDeviceGetName(name, len, dev)
cuDeviceGetName.argtypes = [STRING, c_int, CUdevice]
cuDeviceGetName.__doc__ = \
"""CUresult cuDeviceGetName(char * name, int len, CUdevice dev)
/usr/local/cuda/include/cuda.h:227"""
# /usr/local/cuda/include/cuda.h 228
cuDeviceComputeCapability = _libraries['cuda'].cuDeviceComputeCapability
cuDeviceComputeCapability.restype = CUresult
# cuDeviceComputeCapability(major, minor, dev)
cuDeviceComputeCapability.argtypes = [POINTER(c_int), POINTER(c_int), CUdevice]
cuDeviceComputeCapability.__doc__ = \
"""CUresult cuDeviceComputeCapability(int * major, int * minor, CUdevice dev)
/usr/local/cuda/include/cuda.h:228"""
# /usr/local/cuda/include/cuda.h 229
cuDeviceTotalMem = _libraries['cuda'].cuDeviceTotalMem
cuDeviceTotalMem.restype = CUresult
# cuDeviceTotalMem(bytes, dev)
cuDeviceTotalMem.argtypes = [POINTER(c_uint), CUdevice]
cuDeviceTotalMem.__doc__ = \
"""CUresult cuDeviceTotalMem(unsigned int * bytes, CUdevice dev)
/usr/local/cuda/include/cuda.h:229"""
# /usr/local/cuda/include/cuda.h 230
cuDeviceGetProperties = _libraries['cuda'].cuDeviceGetProperties
cuDeviceGetProperties.restype = CUresult
# cuDeviceGetProperties(prop, dev)
cuDeviceGetProperties.argtypes = [POINTER(CUdevprop), CUdevice]
cuDeviceGetProperties.__doc__ = \
"""CUresult cuDeviceGetProperties(CUdevprop * prop, CUdevice dev)
/usr/local/cuda/include/cuda.h:230"""
# /usr/local/cuda/include/cuda.h 231
cuDeviceGetAttribute = _libraries['cuda'].cuDeviceGetAttribute
cuDeviceGetAttribute.restype = CUresult
# cuDeviceGetAttribute(pi, attrib, dev)
cuDeviceGetAttribute.argtypes = [POINTER(c_int), CUdevice_attribute, CUdevice]
cuDeviceGetAttribute.__doc__ = \
"""CUresult cuDeviceGetAttribute(int * pi, CUdevice_attribute attrib, CUdevice dev)
/usr/local/cuda/include/cuda.h:231"""
# /usr/local/cuda/include/cuda.h 239
cuCtxCreate = _libraries['cuda'].cuCtxCreate
cuCtxCreate.restype = CUresult
# cuCtxCreate(pctx, flags, dev)
cuCtxCreate.argtypes = [POINTER(CUcontext), c_uint, CUdevice]
cuCtxCreate.__doc__ = \
"""CUresult cuCtxCreate(CUcontext * pctx, unsigned int flags, CUdevice dev)
/usr/local/cuda/include/cuda.h:239"""
# /usr/local/cuda/include/cuda.h 240
cuCtxDestroy = _libraries['cuda'].cuCtxDestroy
cuCtxDestroy.restype = CUresult
# cuCtxDestroy(ctx)
cuCtxDestroy.argtypes = [CUcontext]
cuCtxDestroy.__doc__ = \
"""CUresult cuCtxDestroy(CUcontext ctx)
/usr/local/cuda/include/cuda.h:240"""
# /usr/local/cuda/include/cuda.h 241
cuCtxAttach = _libraries['cuda'].cuCtxAttach
cuCtxAttach.restype = CUresult
# cuCtxAttach(pctx, flags)
cuCtxAttach.argtypes = [POINTER(CUcontext), c_uint]
cuCtxAttach.__doc__ = \
"""CUresult cuCtxAttach(CUcontext * pctx, unsigned int flags)
/usr/local/cuda/include/cuda.h:241"""
# /usr/local/cuda/include/cuda.h 242
cuCtxDetach = _libraries['cuda'].cuCtxDetach
cuCtxDetach.restype = CUresult
# cuCtxDetach(ctx)
cuCtxDetach.argtypes = [CUcontext]
cuCtxDetach.__doc__ = \
"""CUresult cuCtxDetach(CUcontext ctx)
/usr/local/cuda/include/cuda.h:242"""
# /usr/local/cuda/include/cuda.h 243
cuCtxPushCurrent = _libraries['cuda'].cuCtxPushCurrent
cuCtxPushCurrent.restype = CUresult
# cuCtxPushCurrent(ctx)
cuCtxPushCurrent.argtypes = [CUcontext]
cuCtxPushCurrent.__doc__ = \
"""CUresult cuCtxPushCurrent(CUcontext ctx)
/usr/local/cuda/include/cuda.h:243"""
# /usr/local/cuda/include/cuda.h 244
cuCtxPopCurrent = _libraries['cuda'].cuCtxPopCurrent
cuCtxPopCurrent.restype = CUresult
# cuCtxPopCurrent(pctx)
cuCtxPopCurrent.argtypes = [POINTER(CUcontext)]
cuCtxPopCurrent.__doc__ = \
"""CUresult cuCtxPopCurrent(CUcontext * pctx)
/usr/local/cuda/include/cuda.h:244"""
# /usr/local/cuda/include/cuda.h 245
cuCtxGetDevice = _libraries['cuda'].cuCtxGetDevice
cuCtxGetDevice.restype = CUresult
# cuCtxGetDevice(device)
cuCtxGetDevice.argtypes = [POINTER(CUdevice)]
cuCtxGetDevice.__doc__ = \
"""CUresult cuCtxGetDevice(CUdevice * device)
/usr/local/cuda/include/cuda.h:245"""
# /usr/local/cuda/include/cuda.h 246
cuCtxSynchronize = _libraries['cuda'].cuCtxSynchronize
cuCtxSynchronize.restype = CUresult
# cuCtxSynchronize()
cuCtxSynchronize.argtypes = []
cuCtxSynchronize.__doc__ = \
"""CUresult cuCtxSynchronize()
/usr/local/cuda/include/cuda.h:246"""
# /usr/local/cuda/include/cuda.h 255
cuModuleLoad = _libraries['cuda'].cuModuleLoad
cuModuleLoad.restype = CUresult
# cuModuleLoad(module, fname)
cuModuleLoad.argtypes = [POINTER(CUmodule), STRING]
cuModuleLoad.__doc__ = \
"""CUresult cuModuleLoad(CUmodule * module, unknown * fname)
/usr/local/cuda/include/cuda.h:255"""
# /usr/local/cuda/include/cuda.h 256
cuModuleLoadData = _libraries['cuda'].cuModuleLoadData
cuModuleLoadData.restype = CUresult
# cuModuleLoadData(module, image)
cuModuleLoadData.argtypes = [POINTER(CUmodule), c_void_p]
cuModuleLoadData.__doc__ = \
"""CUresult cuModuleLoadData(CUmodule * module, unknown * image)
/usr/local/cuda/include/cuda.h:256"""
# /usr/local/cuda/include/cuda.h 257
cuModuleLoadFatBinary = _libraries['cuda'].cuModuleLoadFatBinary
cuModuleLoadFatBinary.restype = CUresult
# cuModuleLoadFatBinary(module, fatCubin)
cuModuleLoadFatBinary.argtypes = [POINTER(CUmodule), c_void_p]
cuModuleLoadFatBinary.__doc__ = \
"""CUresult cuModuleLoadFatBinary(CUmodule * module, unknown * fatCubin)
/usr/local/cuda/include/cuda.h:257"""
# /usr/local/cuda/include/cuda.h 258
cuModuleUnload = _libraries['cuda'].cuModuleUnload
cuModuleUnload.restype = CUresult
# cuModuleUnload(hmod)
cuModuleUnload.argtypes = [CUmodule]
cuModuleUnload.__doc__ = \
"""CUresult cuModuleUnload(CUmodule hmod)
/usr/local/cuda/include/cuda.h:258"""
# /usr/local/cuda/include/cuda.h 259
cuModuleGetFunction = _libraries['cuda'].cuModuleGetFunction
cuModuleGetFunction.restype = CUresult
# cuModuleGetFunction(hfunc, hmod, name)
cuModuleGetFunction.argtypes = [POINTER(CUfunction), CUmodule, STRING]
cuModuleGetFunction.__doc__ = \
"""CUresult cuModuleGetFunction(CUfunction * hfunc, CUmodule hmod, unknown * name)
/usr/local/cuda/include/cuda.h:259"""
# /usr/local/cuda/include/cuda.h 260
cuModuleGetGlobal = _libraries['cuda'].cuModuleGetGlobal
cuModuleGetGlobal.restype = CUresult
# cuModuleGetGlobal(dptr, bytes, hmod, name)
cuModuleGetGlobal.argtypes = [POINTER(CUdeviceptr), POINTER(c_uint), CUmodule, STRING]
cuModuleGetGlobal.__doc__ = \
"""CUresult cuModuleGetGlobal(CUdeviceptr * dptr, unsigned int * bytes, CUmodule hmod, unknown * name)
/usr/local/cuda/include/cuda.h:260"""
# /usr/local/cuda/include/cuda.h 261
cuModuleGetTexRef = _libraries['cuda'].cuModuleGetTexRef
cuModuleGetTexRef.restype = CUresult
# cuModuleGetTexRef(pTexRef, hmod, name)
cuModuleGetTexRef.argtypes = [POINTER(CUtexref), CUmodule, STRING]
cuModuleGetTexRef.__doc__ = \
"""CUresult cuModuleGetTexRef(CUtexref * pTexRef, CUmodule hmod, unknown * name)
/usr/local/cuda/include/cuda.h:261"""
# /usr/local/cuda/include/cuda.h 269
cuMemGetInfo = _libraries['cuda'].cuMemGetInfo
cuMemGetInfo.restype = CUresult
# cuMemGetInfo(free, total)
cuMemGetInfo.argtypes = [POINTER(c_uint), POINTER(c_uint)]
cuMemGetInfo.__doc__ = \
"""CUresult cuMemGetInfo(unsigned int * free, unsigned int * total)
/usr/local/cuda/include/cuda.h:269"""
# /usr/local/cuda/include/cuda.h 271
cuMemAlloc = _libraries['cuda'].cuMemAlloc
cuMemAlloc.restype = CUresult
# cuMemAlloc(dptr, bytesize)
cuMemAlloc.argtypes = [POINTER(CUdeviceptr), c_uint]
cuMemAlloc.__doc__ = \
"""CUresult cuMemAlloc(CUdeviceptr * dptr, unsigned int bytesize)
/usr/local/cuda/include/cuda.h:271"""
# /usr/local/cuda/include/cuda.h 279
cuMemAllocPitch = _libraries['cuda'].cuMemAllocPitch
cuMemAllocPitch.restype = CUresult
# cuMemAllocPitch(dptr, pPitch, WidthInBytes, Height, ElementSizeBytes)
cuMemAllocPitch.argtypes = [POINTER(CUdeviceptr), POINTER(c_uint), c_uint, c_uint, c_uint]
cuMemAllocPitch.__doc__ = \
"""CUresult cuMemAllocPitch(CUdeviceptr * dptr, unsigned int * pPitch, unsigned int WidthInBytes, unsigned int Height, unsigned int ElementSizeBytes)
/usr/local/cuda/include/cuda.h:279"""
# /usr/local/cuda/include/cuda.h 280
cuMemFree = _libraries['cuda'].cuMemFree
cuMemFree.restype = CUresult
# cuMemFree(dptr)
cuMemFree.argtypes = [CUdeviceptr]
cuMemFree.__doc__ = \
"""CUresult cuMemFree(CUdeviceptr dptr)
/usr/local/cuda/include/cuda.h:280"""
# /usr/local/cuda/include/cuda.h 281
cuMemGetAddressRange = _libraries['cuda'].cuMemGetAddressRange
cuMemGetAddressRange.restype = CUresult
# cuMemGetAddressRange(pbase, psize, dptr)
cuMemGetAddressRange.argtypes = [POINTER(CUdeviceptr), POINTER(c_uint), CUdeviceptr]
cuMemGetAddressRange.__doc__ = \
"""CUresult cuMemGetAddressRange(CUdeviceptr * pbase, unsigned int * psize, CUdeviceptr dptr)
/usr/local/cuda/include/cuda.h:281"""
# /usr/local/cuda/include/cuda.h 283
cuMemAllocHost = _libraries['cuda'].cuMemAllocHost
cuMemAllocHost.restype = CUresult
# cuMemAllocHost(pp, bytesize)
cuMemAllocHost.argtypes = [POINTER(c_void_p), c_uint]
cuMemAllocHost.__doc__ = \
"""CUresult cuMemAllocHost(void * * pp, unsigned int bytesize)
/usr/local/cuda/include/cuda.h:283"""
# /usr/local/cuda/include/cuda.h 284
cuMemFreeHost = _libraries['cuda'].cuMemFreeHost
cuMemFreeHost.restype = CUresult
# cuMemFreeHost(p)
cuMemFreeHost.argtypes = [c_void_p]
cuMemFreeHost.__doc__ = \
"""CUresult cuMemFreeHost(void * p)
/usr/local/cuda/include/cuda.h:284"""
# /usr/local/cuda/include/cuda.h 297
cuMemcpyHtoD = _libraries['cuda'].cuMemcpyHtoD
cuMemcpyHtoD.restype = CUresult
# cuMemcpyHtoD(dstDevice, srcHost, ByteCount)
cuMemcpyHtoD.argtypes = [CUdeviceptr, c_void_p, c_uint]
cuMemcpyHtoD.__doc__ = \
"""CUresult cuMemcpyHtoD(CUdeviceptr dstDevice, unknown * srcHost, unsigned int ByteCount)
/usr/local/cuda/include/cuda.h:297"""
# /usr/local/cuda/include/cuda.h 298
cuMemcpyDtoH = _libraries['cuda'].cuMemcpyDtoH
cuMemcpyDtoH.restype = CUresult
# cuMemcpyDtoH(dstHost, srcDevice, ByteCount)
cuMemcpyDtoH.argtypes = [c_void_p, CUdeviceptr, c_uint]
cuMemcpyDtoH.__doc__ = \
"""CUresult cuMemcpyDtoH(void * dstHost, CUdeviceptr srcDevice, unsigned int ByteCount)
/usr/local/cuda/include/cuda.h:298"""
# /usr/local/cuda/include/cuda.h 301
cuMemcpyDtoD = _libraries['cuda'].cuMemcpyDtoD
cuMemcpyDtoD.restype = CUresult
# cuMemcpyDtoD(dstDevice, srcDevice, ByteCount)
cuMemcpyDtoD.argtypes = [CUdeviceptr, CUdeviceptr, c_uint]
cuMemcpyDtoD.__doc__ = \
"""CUresult cuMemcpyDtoD(CUdeviceptr dstDevice, CUdeviceptr srcDevice, unsigned int ByteCount)
/usr/local/cuda/include/cuda.h:301"""
# /usr/local/cuda/include/cuda.h 304
cuMemcpyDtoA = _libraries['cuda'].cuMemcpyDtoA
cuMemcpyDtoA.restype = CUresult
# cuMemcpyDtoA(dstArray, dstIndex, srcDevice, ByteCount)
cuMemcpyDtoA.argtypes = [CUarray, c_uint, CUdeviceptr, c_uint]
cuMemcpyDtoA.__doc__ = \
"""CUresult cuMemcpyDtoA(CUarray dstArray, unsigned int dstIndex, CUdeviceptr srcDevice, unsigned int ByteCount)
/usr/local/cuda/include/cuda.h:304"""
# /usr/local/cuda/include/cuda.h 305
cuMemcpyAtoD = _libraries['cuda'].cuMemcpyAtoD
cuMemcpyAtoD.restype = CUresult
# cuMemcpyAtoD(dstDevice, hSrc, SrcIndex, ByteCount)
cuMemcpyAtoD.argtypes = [CUdeviceptr, CUarray, c_uint, c_uint]
cuMemcpyAtoD.__doc__ = \
"""CUresult cuMemcpyAtoD(CUdeviceptr dstDevice, CUarray hSrc, unsigned int SrcIndex, unsigned int ByteCount)
/usr/local/cuda/include/cuda.h:305"""
# /usr/local/cuda/include/cuda.h 308
cuMemcpyHtoA = _libraries['cuda'].cuMemcpyHtoA
cuMemcpyHtoA.restype = CUresult
# cuMemcpyHtoA(dstArray, dstIndex, pSrc, ByteCount)
cuMemcpyHtoA.argtypes = [CUarray, c_uint, c_void_p, c_uint]
cuMemcpyHtoA.__doc__ = \
"""CUresult cuMemcpyHtoA(CUarray dstArray, unsigned int dstIndex, unknown * pSrc, unsigned int ByteCount)
/usr/local/cuda/include/cuda.h:308"""
# /usr/local/cuda/include/cuda.h 309
cuMemcpyAtoH = _libraries['cuda'].cuMemcpyAtoH
cuMemcpyAtoH.restype = CUresult
# cuMemcpyAtoH(dstHost, srcArray, srcIndex, ByteCount)
cuMemcpyAtoH.argtypes = [c_void_p, CUarray, c_uint, c_uint]
cuMemcpyAtoH.__doc__ = \
"""CUresult cuMemcpyAtoH(void * dstHost, CUarray srcArray, unsigned int srcIndex, unsigned int ByteCount)
/usr/local/cuda/include/cuda.h:309"""
# /usr/local/cuda/include/cuda.h 312
cuMemcpyAtoA = _libraries['cuda'].cuMemcpyAtoA
cuMemcpyAtoA.restype = CUresult
# cuMemcpyAtoA(dstArray, dstIndex, srcArray, srcIndex, ByteCount)
cuMemcpyAtoA.argtypes = [CUarray, c_uint, CUarray, c_uint, c_uint]
cuMemcpyAtoA.__doc__ = \
"""CUresult cuMemcpyAtoA(CUarray dstArray, unsigned int dstIndex, CUarray srcArray, unsigned int srcIndex, unsigned int ByteCount)
/usr/local/cuda/include/cuda.h:312"""
# /usr/local/cuda/include/cuda.h 316
class CUDA_MEMCPY2D_st(Structure):
    pass
CUDA_MEMCPY2D_st._fields_ = [
    # /usr/local/cuda/include/cuda.h 316
    ('srcXInBytes', c_uint),
    ('srcY', c_uint),
    ('srcMemoryType', CUmemorytype),
    ('srcHost', c_void_p),
    ('srcDevice', CUdeviceptr),
    ('srcArray', CUarray),
    ('srcPitch', c_uint),
    ('dstXInBytes', c_uint),
    ('dstY', c_uint),
    ('dstMemoryType', CUmemorytype),
    ('dstHost', c_void_p),
    ('dstDevice', CUdeviceptr),
    ('dstArray', CUarray),
    ('dstPitch', c_uint),
    ('WidthInBytes', c_uint),
    ('Height', c_uint),
]
CUDA_MEMCPY2D = CUDA_MEMCPY2D_st
# /usr/local/cuda/include/cuda.h 335
cuMemcpy2D = _libraries['cuda'].cuMemcpy2D
cuMemcpy2D.restype = CUresult
# cuMemcpy2D(pCopy)
cuMemcpy2D.argtypes = [POINTER(CUDA_MEMCPY2D)]
cuMemcpy2D.__doc__ = \
"""CUresult cuMemcpy2D(unknown * pCopy)
/usr/local/cuda/include/cuda.h:335"""
# /usr/local/cuda/include/cuda.h 336
cuMemcpy2DUnaligned = _libraries['cuda'].cuMemcpy2DUnaligned
cuMemcpy2DUnaligned.restype = CUresult
# cuMemcpy2DUnaligned(pCopy)
cuMemcpy2DUnaligned.argtypes = [POINTER(CUDA_MEMCPY2D)]
cuMemcpy2DUnaligned.__doc__ = \
"""CUresult cuMemcpy2DUnaligned(unknown * pCopy)
/usr/local/cuda/include/cuda.h:336"""
# /usr/local/cuda/include/cuda.h 340
class CUDA_MEMCPY3D_st(Structure):
    pass
CUDA_MEMCPY3D_st._fields_ = [
    # /usr/local/cuda/include/cuda.h 340
    ('srcXInBytes', c_uint),
    ('srcY', c_uint),
    ('srcZ', c_uint),
    ('srcLOD', c_uint),
    ('srcMemoryType', CUmemorytype),
    ('srcHost', c_void_p),
    ('srcDevice', CUdeviceptr),
    ('srcArray', CUarray),
    ('reserved0', c_void_p),
    ('srcPitch', c_uint),
    ('srcHeight', c_uint),
    ('dstXInBytes', c_uint),
    ('dstY', c_uint),
    ('dstZ', c_uint),
    ('dstLOD', c_uint),
    ('dstMemoryType', CUmemorytype),
    ('dstHost', c_void_p),
    ('dstDevice', CUdeviceptr),
    ('dstArray', CUarray),
    ('reserved1', c_void_p),
    ('dstPitch', c_uint),
    ('dstHeight', c_uint),
    ('WidthInBytes', c_uint),
    ('Height', c_uint),
    ('Depth', c_uint),
]
CUDA_MEMCPY3D = CUDA_MEMCPY3D_st
# /usr/local/cuda/include/cuda.h 366
cuMemcpy3D = _libraries['cuda'].cuMemcpy3D
cuMemcpy3D.restype = CUresult
# cuMemcpy3D(pCopy)
cuMemcpy3D.argtypes = [POINTER(CUDA_MEMCPY3D)]
cuMemcpy3D.__doc__ = \
"""CUresult cuMemcpy3D(unknown * pCopy)
/usr/local/cuda/include/cuda.h:366"""
# /usr/local/cuda/include/cuda.h 382
cuMemcpyHtoDAsync = _libraries['cuda'].cuMemcpyHtoDAsync
cuMemcpyHtoDAsync.restype = CUresult
# cuMemcpyHtoDAsync(dstDevice, srcHost, ByteCount, hStream)
cuMemcpyHtoDAsync.argtypes = [CUdeviceptr, c_void_p, c_uint, CUstream]
cuMemcpyHtoDAsync.__doc__ = \
"""CUresult cuMemcpyHtoDAsync(CUdeviceptr dstDevice, unknown * srcHost, unsigned int ByteCount, CUstream hStream)
/usr/local/cuda/include/cuda.h:382"""
# /usr/local/cuda/include/cuda.h 384
cuMemcpyDtoHAsync = _libraries['cuda'].cuMemcpyDtoHAsync
cuMemcpyDtoHAsync.restype = CUresult
# cuMemcpyDtoHAsync(dstHost, srcDevice, ByteCount, hStream)
cuMemcpyDtoHAsync.argtypes = [c_void_p, CUdeviceptr, c_uint, CUstream]
cuMemcpyDtoHAsync.__doc__ = \
"""CUresult cuMemcpyDtoHAsync(void * dstHost, CUdeviceptr srcDevice, unsigned int ByteCount, CUstream hStream)
/usr/local/cuda/include/cuda.h:384"""
# /usr/local/cuda/include/cuda.h 388
cuMemcpyHtoAAsync = _libraries['cuda'].cuMemcpyHtoAAsync
cuMemcpyHtoAAsync.restype = CUresult
# cuMemcpyHtoAAsync(dstArray, dstIndex, pSrc, ByteCount, hStream)
cuMemcpyHtoAAsync.argtypes = [CUarray, c_uint, c_void_p, c_uint, CUstream]
cuMemcpyHtoAAsync.__doc__ = \
"""CUresult cuMemcpyHtoAAsync(CUarray dstArray, unsigned int dstIndex, unknown * pSrc, unsigned int ByteCount, CUstream hStream)
/usr/local/cuda/include/cuda.h:388"""
# /usr/local/cuda/include/cuda.h 390
cuMemcpyAtoHAsync = _libraries['cuda'].cuMemcpyAtoHAsync
cuMemcpyAtoHAsync.restype = CUresult
# cuMemcpyAtoHAsync(dstHost, srcArray, srcIndex, ByteCount, hStream)
cuMemcpyAtoHAsync.argtypes = [c_void_p, CUarray, c_uint, c_uint, CUstream]
cuMemcpyAtoHAsync.__doc__ = \
"""CUresult cuMemcpyAtoHAsync(void * dstHost, CUarray srcArray, unsigned int srcIndex, unsigned int ByteCount, CUstream hStream)
/usr/local/cuda/include/cuda.h:390"""
# /usr/local/cuda/include/cuda.h 393
cuMemcpy2DAsync = _libraries['cuda'].cuMemcpy2DAsync
cuMemcpy2DAsync.restype = CUresult
# cuMemcpy2DAsync(pCopy, hStream)
cuMemcpy2DAsync.argtypes = [POINTER(CUDA_MEMCPY2D), CUstream]
cuMemcpy2DAsync.__doc__ = \
"""CUresult cuMemcpy2DAsync(unknown * pCopy, CUstream hStream)
/usr/local/cuda/include/cuda.h:393"""
# /usr/local/cuda/include/cuda.h 396
cuMemcpy3DAsync = _libraries['cuda'].cuMemcpy3DAsync
cuMemcpy3DAsync.restype = CUresult
# cuMemcpy3DAsync(pCopy, hStream)
cuMemcpy3DAsync.argtypes = [POINTER(CUDA_MEMCPY3D), CUstream]
cuMemcpy3DAsync.__doc__ = \
"""CUresult cuMemcpy3DAsync(unknown * pCopy, CUstream hStream)
/usr/local/cuda/include/cuda.h:396"""
# /usr/local/cuda/include/cuda.h 403
cuMemsetD8 = _libraries['cuda'].cuMemsetD8
cuMemsetD8.restype = CUresult
# cuMemsetD8(dstDevice, uc, N)
cuMemsetD8.argtypes = [CUdeviceptr, c_ubyte, c_uint]
cuMemsetD8.__doc__ = \
"""CUresult cuMemsetD8(CUdeviceptr dstDevice, unsigned char uc, unsigned int N)
/usr/local/cuda/include/cuda.h:403"""
# /usr/local/cuda/include/cuda.h 404
cuMemsetD16 = _libraries['cuda'].cuMemsetD16
cuMemsetD16.restype = CUresult
# cuMemsetD16(dstDevice, us, N)
cuMemsetD16.argtypes = [CUdeviceptr, c_ushort, c_uint]
cuMemsetD16.__doc__ = \
"""CUresult cuMemsetD16(CUdeviceptr dstDevice, short unsigned int us, unsigned int N)
/usr/local/cuda/include/cuda.h:404"""
# /usr/local/cuda/include/cuda.h 405
cuMemsetD32 = _libraries['cuda'].cuMemsetD32
cuMemsetD32.restype = CUresult
# cuMemsetD32(dstDevice, ui, N)
cuMemsetD32.argtypes = [CUdeviceptr, c_uint, c_uint]
cuMemsetD32.__doc__ = \
"""CUresult cuMemsetD32(CUdeviceptr dstDevice, unsigned int ui, unsigned int N)
/usr/local/cuda/include/cuda.h:405"""
# /usr/local/cuda/include/cuda.h 407
cuMemsetD2D8 = _libraries['cuda'].cuMemsetD2D8
cuMemsetD2D8.restype = CUresult
# cuMemsetD2D8(dstDevice, dstPitch, uc, Width, Height)
cuMemsetD2D8.argtypes = [CUdeviceptr, c_uint, c_ubyte, c_uint, c_uint]
cuMemsetD2D8.__doc__ = \
"""CUresult cuMemsetD2D8(CUdeviceptr dstDevice, unsigned int dstPitch, unsigned char uc, unsigned int Width, unsigned int Height)
/usr/local/cuda/include/cuda.h:407"""
# /usr/local/cuda/include/cuda.h 408
cuMemsetD2D16 = _libraries['cuda'].cuMemsetD2D16
cuMemsetD2D16.restype = CUresult
# cuMemsetD2D16(dstDevice, dstPitch, us, Width, Height)
cuMemsetD2D16.argtypes = [CUdeviceptr, c_uint, c_ushort, c_uint, c_uint]
cuMemsetD2D16.__doc__ = \
"""CUresult cuMemsetD2D16(CUdeviceptr dstDevice, unsigned int dstPitch, short unsigned int us, unsigned int Width, unsigned int Height)
/usr/local/cuda/include/cuda.h:408"""
# /usr/local/cuda/include/cuda.h 409
cuMemsetD2D32 = _libraries['cuda'].cuMemsetD2D32
cuMemsetD2D32.restype = CUresult
# cuMemsetD2D32(dstDevice, dstPitch, ui, Width, Height)
cuMemsetD2D32.argtypes = [CUdeviceptr, c_uint, c_uint, c_uint, c_uint]
cuMemsetD2D32.__doc__ = \
"""CUresult cuMemsetD2D32(CUdeviceptr dstDevice, unsigned int dstPitch, unsigned int ui, unsigned int Width, unsigned int Height)
/usr/local/cuda/include/cuda.h:409"""
# /usr/local/cuda/include/cuda.h 418
cuFuncSetBlockShape = _libraries['cuda'].cuFuncSetBlockShape
cuFuncSetBlockShape.restype = CUresult
# cuFuncSetBlockShape(hfunc, x, y, z)
cuFuncSetBlockShape.argtypes = [CUfunction, c_int, c_int, c_int]
cuFuncSetBlockShape.__doc__ = \
"""CUresult cuFuncSetBlockShape(CUfunction hfunc, int x, int y, int z)
/usr/local/cuda/include/cuda.h:418"""
# /usr/local/cuda/include/cuda.h 419
cuFuncSetSharedSize = _libraries['cuda'].cuFuncSetSharedSize
cuFuncSetSharedSize.restype = CUresult
# cuFuncSetSharedSize(hfunc, bytes)
cuFuncSetSharedSize.argtypes = [CUfunction, c_uint]
cuFuncSetSharedSize.__doc__ = \
"""CUresult cuFuncSetSharedSize(CUfunction hfunc, unsigned int bytes)
/usr/local/cuda/include/cuda.h:419"""
# /usr/local/cuda/include/cuda.h 442
class CUDA_ARRAY_DESCRIPTOR(Structure):
    pass
CUDA_ARRAY_DESCRIPTOR._fields_ = [
    # /usr/local/cuda/include/cuda.h 442
    ('Width', c_uint),
    ('Height', c_uint),
    ('Format', CUarray_format),
    ('NumChannels', c_uint),
]
# /usr/local/cuda/include/cuda.h 444
cuArrayCreate = _libraries['cuda'].cuArrayCreate
cuArrayCreate.restype = CUresult
# cuArrayCreate(pHandle, pAllocateArray)
cuArrayCreate.argtypes = [POINTER(CUarray), POINTER(CUDA_ARRAY_DESCRIPTOR)]
cuArrayCreate.__doc__ = \
"""CUresult cuArrayCreate(CUarray * pHandle, unknown * pAllocateArray)
/usr/local/cuda/include/cuda.h:444"""
# /usr/local/cuda/include/cuda.h 445
cuArrayGetDescriptor = _libraries['cuda'].cuArrayGetDescriptor
cuArrayGetDescriptor.restype = CUresult
# cuArrayGetDescriptor(pArrayDescriptor, hArray)
cuArrayGetDescriptor.argtypes = [POINTER(CUDA_ARRAY_DESCRIPTOR), CUarray]
cuArrayGetDescriptor.__doc__ = \
"""CUresult cuArrayGetDescriptor(CUDA_ARRAY_DESCRIPTOR * pArrayDescriptor, CUarray hArray)
/usr/local/cuda/include/cuda.h:445"""
# /usr/local/cuda/include/cuda.h 446
cuArrayDestroy = _libraries['cuda'].cuArrayDestroy
cuArrayDestroy.restype = CUresult
# cuArrayDestroy(hArray)
cuArrayDestroy.argtypes = [CUarray]
cuArrayDestroy.__doc__ = \
"""CUresult cuArrayDestroy(CUarray hArray)
/usr/local/cuda/include/cuda.h:446"""
# /usr/local/cuda/include/cuda.h 468
class CUDA_ARRAY3D_DESCRIPTOR(Structure):
    pass
CUDA_ARRAY3D_DESCRIPTOR._fields_ = [
    # /usr/local/cuda/include/cuda.h 468
    ('Width', c_uint),
    ('Height', c_uint),
    ('Depth', c_uint),
    ('Format', CUarray_format),
    ('NumChannels', c_uint),
    ('Flags', c_uint),
]
# /usr/local/cuda/include/cuda.h 469
cuArray3DCreate = _libraries['cuda'].cuArray3DCreate
cuArray3DCreate.restype = CUresult
# cuArray3DCreate(pHandle, pAllocateArray)
cuArray3DCreate.argtypes = [POINTER(CUarray), POINTER(CUDA_ARRAY3D_DESCRIPTOR)]
cuArray3DCreate.__doc__ = \
"""CUresult cuArray3DCreate(CUarray * pHandle, unknown * pAllocateArray)
/usr/local/cuda/include/cuda.h:469"""
# /usr/local/cuda/include/cuda.h 470
cuArray3DGetDescriptor = _libraries['cuda'].cuArray3DGetDescriptor
cuArray3DGetDescriptor.restype = CUresult
# cuArray3DGetDescriptor(pArrayDescriptor, hArray)
cuArray3DGetDescriptor.argtypes = [POINTER(CUDA_ARRAY3D_DESCRIPTOR), CUarray]
cuArray3DGetDescriptor.__doc__ = \
"""CUresult cuArray3DGetDescriptor(CUDA_ARRAY3D_DESCRIPTOR * pArrayDescriptor, CUarray hArray)
/usr/local/cuda/include/cuda.h:470"""
# /usr/local/cuda/include/cuda.h 477
cuTexRefCreate = _libraries['cuda'].cuTexRefCreate
cuTexRefCreate.restype = CUresult
# cuTexRefCreate(pTexRef)
cuTexRefCreate.argtypes = [POINTER(CUtexref)]
cuTexRefCreate.__doc__ = \
"""CUresult cuTexRefCreate(CUtexref * pTexRef)
/usr/local/cuda/include/cuda.h:477"""
# /usr/local/cuda/include/cuda.h 478
cuTexRefDestroy = _libraries['cuda'].cuTexRefDestroy
cuTexRefDestroy.restype = CUresult
# cuTexRefDestroy(hTexRef)
cuTexRefDestroy.argtypes = [CUtexref]
cuTexRefDestroy.__doc__ = \
"""CUresult cuTexRefDestroy(CUtexref hTexRef)
/usr/local/cuda/include/cuda.h:478"""
# /usr/local/cuda/include/cuda.h 480
cuTexRefSetArray = _libraries['cuda'].cuTexRefSetArray
cuTexRefSetArray.restype = CUresult
# cuTexRefSetArray(hTexRef, hArray, Flags)
cuTexRefSetArray.argtypes = [CUtexref, CUarray, c_uint]
cuTexRefSetArray.__doc__ = \
"""CUresult cuTexRefSetArray(CUtexref hTexRef, CUarray hArray, unsigned int Flags)
/usr/local/cuda/include/cuda.h:480"""
# /usr/local/cuda/include/cuda.h 483
cuTexRefSetAddress = _libraries['cuda'].cuTexRefSetAddress
cuTexRefSetAddress.restype = CUresult
# cuTexRefSetAddress(ByteOffset, hTexRef, dptr, bytes)
cuTexRefSetAddress.argtypes = [POINTER(c_uint), CUtexref, CUdeviceptr, c_uint]
cuTexRefSetAddress.__doc__ = \
"""CUresult cuTexRefSetAddress(unsigned int * ByteOffset, CUtexref hTexRef, CUdeviceptr dptr, unsigned int bytes)
/usr/local/cuda/include/cuda.h:483"""
# /usr/local/cuda/include/cuda.h 484
cuTexRefSetFormat = _libraries['cuda'].cuTexRefSetFormat
cuTexRefSetFormat.restype = CUresult
# cuTexRefSetFormat(hTexRef, fmt, NumPackedComponents)
cuTexRefSetFormat.argtypes = [CUtexref, CUarray_format, c_int]
cuTexRefSetFormat.__doc__ = \
"""CUresult cuTexRefSetFormat(CUtexref hTexRef, CUarray_format fmt, int NumPackedComponents)
/usr/local/cuda/include/cuda.h:484"""
# /usr/local/cuda/include/cuda.h 486
cuTexRefSetAddressMode = _libraries['cuda'].cuTexRefSetAddressMode
cuTexRefSetAddressMode.restype = CUresult
# cuTexRefSetAddressMode(hTexRef, dim, am)
cuTexRefSetAddressMode.argtypes = [CUtexref, c_int, CUaddress_mode]
cuTexRefSetAddressMode.__doc__ = \
"""CUresult cuTexRefSetAddressMode(CUtexref hTexRef, int dim, CUaddress_mode am)
/usr/local/cuda/include/cuda.h:486"""
# /usr/local/cuda/include/cuda.h 487
cuTexRefSetFilterMode = _libraries['cuda'].cuTexRefSetFilterMode
cuTexRefSetFilterMode.restype = CUresult
# cuTexRefSetFilterMode(hTexRef, fm)
cuTexRefSetFilterMode.argtypes = [CUtexref, CUfilter_mode]
cuTexRefSetFilterMode.__doc__ = \
"""CUresult cuTexRefSetFilterMode(CUtexref hTexRef, CUfilter_mode fm)
/usr/local/cuda/include/cuda.h:487"""
# /usr/local/cuda/include/cuda.h 488
cuTexRefSetFlags = _libraries['cuda'].cuTexRefSetFlags
cuTexRefSetFlags.restype = CUresult
# cuTexRefSetFlags(hTexRef, Flags)
cuTexRefSetFlags.argtypes = [CUtexref, c_uint]
cuTexRefSetFlags.__doc__ = \
"""CUresult cuTexRefSetFlags(CUtexref hTexRef, unsigned int Flags)
/usr/local/cuda/include/cuda.h:488"""
# /usr/local/cuda/include/cuda.h 496
cuTexRefGetAddress = _libraries['cuda'].cuTexRefGetAddress
cuTexRefGetAddress.restype = CUresult
# cuTexRefGetAddress(pdptr, hTexRef)
cuTexRefGetAddress.argtypes = [POINTER(CUdeviceptr), CUtexref]
cuTexRefGetAddress.__doc__ = \
"""CUresult cuTexRefGetAddress(CUdeviceptr * pdptr, CUtexref hTexRef)
/usr/local/cuda/include/cuda.h:496"""
# /usr/local/cuda/include/cuda.h 497
cuTexRefGetArray = _libraries['cuda'].cuTexRefGetArray
cuTexRefGetArray.restype = CUresult
# cuTexRefGetArray(phArray, hTexRef)
cuTexRefGetArray.argtypes = [POINTER(CUarray), CUtexref]
cuTexRefGetArray.__doc__ = \
"""CUresult cuTexRefGetArray(CUarray * phArray, CUtexref hTexRef)
/usr/local/cuda/include/cuda.h:497"""
# /usr/local/cuda/include/cuda.h 498
cuTexRefGetAddressMode = _libraries['cuda'].cuTexRefGetAddressMode
cuTexRefGetAddressMode.restype = CUresult
# cuTexRefGetAddressMode(pam, hTexRef, dim)
cuTexRefGetAddressMode.argtypes = [POINTER(CUaddress_mode), CUtexref, c_int]
cuTexRefGetAddressMode.__doc__ = \
"""CUresult cuTexRefGetAddressMode(CUaddress_mode * pam, CUtexref hTexRef, int dim)
/usr/local/cuda/include/cuda.h:498"""
# /usr/local/cuda/include/cuda.h 499
cuTexRefGetFilterMode = _libraries['cuda'].cuTexRefGetFilterMode
cuTexRefGetFilterMode.restype = CUresult
# cuTexRefGetFilterMode(pfm, hTexRef)
cuTexRefGetFilterMode.argtypes = [POINTER(CUfilter_mode), CUtexref]
cuTexRefGetFilterMode.__doc__ = \
"""CUresult cuTexRefGetFilterMode(CUfilter_mode * pfm, CUtexref hTexRef)
/usr/local/cuda/include/cuda.h:499"""
# /usr/local/cuda/include/cuda.h 500
cuTexRefGetFormat = _libraries['cuda'].cuTexRefGetFormat
cuTexRefGetFormat.restype = CUresult
# cuTexRefGetFormat(pFormat, pNumChannels, hTexRef)
cuTexRefGetFormat.argtypes = [POINTER(CUarray_format), POINTER(c_int), CUtexref]
cuTexRefGetFormat.__doc__ = \
"""CUresult cuTexRefGetFormat(CUarray_format * pFormat, int * pNumChannels, CUtexref hTexRef)
/usr/local/cuda/include/cuda.h:500"""
# /usr/local/cuda/include/cuda.h 501
cuTexRefGetFlags = _libraries['cuda'].cuTexRefGetFlags
cuTexRefGetFlags.restype = CUresult
# cuTexRefGetFlags(pFlags, hTexRef)
cuTexRefGetFlags.argtypes = [POINTER(c_uint), CUtexref]
cuTexRefGetFlags.__doc__ = \
"""CUresult cuTexRefGetFlags(unsigned int * pFlags, CUtexref hTexRef)
/usr/local/cuda/include/cuda.h:501"""
# /usr/local/cuda/include/cuda.h 509
cuParamSetSize = _libraries['cuda'].cuParamSetSize
cuParamSetSize.restype = CUresult
# cuParamSetSize(hfunc, numbytes)
cuParamSetSize.argtypes = [CUfunction, c_uint]
cuParamSetSize.__doc__ = \
"""CUresult cuParamSetSize(CUfunction hfunc, unsigned int numbytes)
/usr/local/cuda/include/cuda.h:509"""
# /usr/local/cuda/include/cuda.h 510
cuParamSeti = _libraries['cuda'].cuParamSeti
cuParamSeti.restype = CUresult
# cuParamSeti(hfunc, offset, value)
cuParamSeti.argtypes = [CUfunction, c_int, c_uint]
cuParamSeti.__doc__ = \
"""CUresult cuParamSeti(CUfunction hfunc, int offset, unsigned int value)
/usr/local/cuda/include/cuda.h:510"""
# /usr/local/cuda/include/cuda.h 511
cuParamSetf = _libraries['cuda'].cuParamSetf
cuParamSetf.restype = CUresult
# cuParamSetf(hfunc, offset, value)
cuParamSetf.argtypes = [CUfunction, c_int, c_float]
cuParamSetf.__doc__ = \
"""CUresult cuParamSetf(CUfunction hfunc, int offset, float value)
/usr/local/cuda/include/cuda.h:511"""
# /usr/local/cuda/include/cuda.h 512
cuParamSetv = _libraries['cuda'].cuParamSetv
cuParamSetv.restype = CUresult
# cuParamSetv(hfunc, offset, ptr, numbytes)
cuParamSetv.argtypes = [CUfunction, c_int, c_void_p, c_uint]
cuParamSetv.__doc__ = \
"""CUresult cuParamSetv(CUfunction hfunc, int offset, void * ptr, unsigned int numbytes)
/usr/local/cuda/include/cuda.h:512"""
# /usr/local/cuda/include/cuda.h 513
cuParamSetTexRef = _libraries['cuda'].cuParamSetTexRef
cuParamSetTexRef.restype = CUresult
# cuParamSetTexRef(hfunc, texunit, hTexRef)
cuParamSetTexRef.argtypes = [CUfunction, c_int, CUtexref]
cuParamSetTexRef.__doc__ = \
"""CUresult cuParamSetTexRef(CUfunction hfunc, int texunit, CUtexref hTexRef)
/usr/local/cuda/include/cuda.h:513"""
# /usr/local/cuda/include/cuda.h 524
cuLaunch = _libraries['cuda'].cuLaunch
cuLaunch.restype = CUresult
# cuLaunch(f)
cuLaunch.argtypes = [CUfunction]
cuLaunch.__doc__ = \
"""CUresult cuLaunch(CUfunction f)
/usr/local/cuda/include/cuda.h:524"""
# /usr/local/cuda/include/cuda.h 525
cuLaunchGrid = _libraries['cuda'].cuLaunchGrid
cuLaunchGrid.restype = CUresult
# cuLaunchGrid(f, grid_width, grid_height)
cuLaunchGrid.argtypes = [CUfunction, c_int, c_int]
cuLaunchGrid.__doc__ = \
"""CUresult cuLaunchGrid(CUfunction f, int grid_width, int grid_height)
/usr/local/cuda/include/cuda.h:525"""
# /usr/local/cuda/include/cuda.h 526
cuLaunchGridAsync = _libraries['cuda'].cuLaunchGridAsync
cuLaunchGridAsync.restype = CUresult
# cuLaunchGridAsync(f, grid_width, grid_height, hStream)
cuLaunchGridAsync.argtypes = [CUfunction, c_int, c_int, CUstream]
cuLaunchGridAsync.__doc__ = \
"""CUresult cuLaunchGridAsync(CUfunction f, int grid_width, int grid_height, CUstream hStream)
/usr/local/cuda/include/cuda.h:526"""
# /usr/local/cuda/include/cuda.h 533
cuEventCreate = _libraries['cuda'].cuEventCreate
cuEventCreate.restype = CUresult
# cuEventCreate(phEvent, Flags)
cuEventCreate.argtypes = [POINTER(CUevent), c_uint]
cuEventCreate.__doc__ = \
"""CUresult cuEventCreate(CUevent * phEvent, unsigned int Flags)
/usr/local/cuda/include/cuda.h:533"""
# /usr/local/cuda/include/cuda.h 534
cuEventRecord = _libraries['cuda'].cuEventRecord
cuEventRecord.restype = CUresult
# cuEventRecord(hEvent, hStream)
cuEventRecord.argtypes = [CUevent, CUstream]
cuEventRecord.__doc__ = \
"""CUresult cuEventRecord(CUevent hEvent, CUstream hStream)
/usr/local/cuda/include/cuda.h:534"""
# /usr/local/cuda/include/cuda.h 535
cuEventQuery = _libraries['cuda'].cuEventQuery
cuEventQuery.restype = CUresult
# cuEventQuery(hEvent)
cuEventQuery.argtypes = [CUevent]
cuEventQuery.__doc__ = \
"""CUresult cuEventQuery(CUevent hEvent)
/usr/local/cuda/include/cuda.h:535"""
# /usr/local/cuda/include/cuda.h 536
cuEventSynchronize = _libraries['cuda'].cuEventSynchronize
cuEventSynchronize.restype = CUresult
# cuEventSynchronize(hEvent)
cuEventSynchronize.argtypes = [CUevent]
cuEventSynchronize.__doc__ = \
"""CUresult cuEventSynchronize(CUevent hEvent)
/usr/local/cuda/include/cuda.h:536"""
# /usr/local/cuda/include/cuda.h 537
cuEventDestroy = _libraries['cuda'].cuEventDestroy
cuEventDestroy.restype = CUresult
# cuEventDestroy(hEvent)
cuEventDestroy.argtypes = [CUevent]
cuEventDestroy.__doc__ = \
"""CUresult cuEventDestroy(CUevent hEvent)
/usr/local/cuda/include/cuda.h:537"""
# /usr/local/cuda/include/cuda.h 538
cuEventElapsedTime = _libraries['cuda'].cuEventElapsedTime
cuEventElapsedTime.restype = CUresult
# cuEventElapsedTime(pMilliseconds, hStart, hEnd)
cuEventElapsedTime.argtypes = [POINTER(c_float), CUevent, CUevent]
cuEventElapsedTime.__doc__ = \
"""CUresult cuEventElapsedTime(float * pMilliseconds, CUevent hStart, CUevent hEnd)
/usr/local/cuda/include/cuda.h:538"""
# /usr/local/cuda/include/cuda.h 545
cuStreamCreate = _libraries['cuda'].cuStreamCreate
cuStreamCreate.restype = CUresult
# cuStreamCreate(phStream, Flags)
cuStreamCreate.argtypes = [POINTER(CUstream), c_uint]
cuStreamCreate.__doc__ = \
"""CUresult cuStreamCreate(CUstream * phStream, unsigned int Flags)
/usr/local/cuda/include/cuda.h:545"""
# /usr/local/cuda/include/cuda.h 546
cuStreamQuery = _libraries['cuda'].cuStreamQuery
cuStreamQuery.restype = CUresult
# cuStreamQuery(hStream)
cuStreamQuery.argtypes = [CUstream]
cuStreamQuery.__doc__ = \
"""CUresult cuStreamQuery(CUstream hStream)
/usr/local/cuda/include/cuda.h:546"""
# /usr/local/cuda/include/cuda.h 547
cuStreamSynchronize = _libraries['cuda'].cuStreamSynchronize
cuStreamSynchronize.restype = CUresult
# cuStreamSynchronize(hStream)
cuStreamSynchronize.argtypes = [CUstream]
cuStreamSynchronize.__doc__ = \
"""CUresult cuStreamSynchronize(CUstream hStream)
/usr/local/cuda/include/cuda.h:547"""
# /usr/local/cuda/include/cuda.h 548
cuStreamDestroy = _libraries['cuda'].cuStreamDestroy
cuStreamDestroy.restype = CUresult
# cuStreamDestroy(hStream)
cuStreamDestroy.argtypes = [CUstream]
cuStreamDestroy.__doc__ = \
"""CUresult cuStreamDestroy(CUstream hStream)
/usr/local/cuda/include/cuda.h:548"""
__all__ = ['CUdevprop_st', 'cuMemFreeHost', 'cuMemcpyDtoA',
           'CUctx_flags_enum',
           'CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK',
           'cuTexRefGetAddressMode', 'cuCtxPushCurrent',
           'cuEventElapsedTime', 'CU_AD_FORMAT_UNSIGNED_INT8',
           'cuParamSetf', 'cuEventDestroy', 'cuMemcpy3DAsync',
           'CUmemorytype', 'cuCtxDestroy', 'cuTexRefSetArray',
           'CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK', 'CUevent',
           'CUDA_ERROR_FILE_NOT_FOUND', 'CUctx_st',
           'cuTexRefSetFormat', 'cuMemcpyHtoDAsync',
           'CUDA_ERROR_UNMAP_FAILED', 'cuEventRecord',
           'CUDA_ERROR_INVALID_IMAGE', 'CUDA_ERROR_ALREADY_ACQUIRED',
           'cuDeviceComputeCapability', 'cuParamSetSize',
           'CUDA_ERROR_NO_DEVICE', 'CU_MEMORYTYPE_HOST',
           'cuTexRefSetAddress', 'CU_DEVICE_ATTRIBUTE_WARP_SIZE',
           'cuMemFree', 'CUstream_st', 'CUDA_ERROR_INVALID_CONTEXT',
           'CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY',
           'CUfilter_mode_enum', 'cuMemcpyAtoHAsync', 'cuLaunchGrid',
           'CU_TR_ADDRESS_MODE_WRAP', 'cuTexRefGetFormat',
           'cuMemsetD8', 'CUarray_format_enum', 'cuDeviceGetCount',
           'CU_TR_FILTER_MODE_POINT', 'CUDA_ERROR_LAUNCH_TIMEOUT',
           'CU_MEMORYTYPE_DEVICE', 'CU_AD_FORMAT_UNSIGNED_INT32',
           'CUdevice', 'CUfunction', 'CUfunc_st', 'cuMemcpy2D',
           'CU_CTX_SCHED_MASK', 'CUDA_ERROR_ARRAY_IS_MAPPED',
           'CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK',
           'cuDeviceGetName', 'CUmemorytype_enum',
           'cuStreamSynchronize', 'CUevent_st', 'CUtexref_st',
           'CU_CTX_FLAGS_MASK', 'CU_DEVICE_ATTRIBUTE_MAX_PITCH',
           'cuMemsetD16', 'cuMemcpyHtoAAsync',
           'CU_DEVICE_ATTRIBUTE_GPU_OVERLAP', 'CUtexref',
           'cuMemsetD2D16', 'cuMemcpyHtoD', 'cuArray3DGetDescriptor',
           'cuMemcpyHtoA', 'cuFuncSetSharedSize', 'cuCtxAttach',
           'cuMemGetInfo', 'CUDA_ARRAY3D_DESCRIPTOR',
           'cuModuleGetTexRef', 'cuDeviceGet', 'CU_CTX_SCHED_YIELD',
           'cuCtxPopCurrent', 'CUarray_st', 'CUaddress_mode',
           'cuCtxDetach', 'CU_AD_FORMAT_HALF', 'cuArrayDestroy',
           'CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT',
           'cuModuleGetGlobal', 'CUDA_ERROR_NOT_INITIALIZED',
           'CUDA_ERROR_INVALID_SOURCE', 'cuMemGetAddressRange',
           'cuTexRefGetArray', 'CUDA_ERROR_INVALID_VALUE',
           'cuDeviceTotalMem', 'CUarray_format',
           'CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z',
           'CUDA_ERROR_NOT_FOUND',
           'CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X',
           'CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y',
           'CU_AD_FORMAT_UNSIGNED_INT16', 'cuStreamCreate',
           'CU_AD_FORMAT_SIGNED_INT16', 'cuArrayGetDescriptor',
           'cuCtxSynchronize', 'cuMemcpy2DUnaligned',
           'cuTexRefGetAddress', 'CUarray', 'cuStreamQuery',
           'CUDA_ERROR_UNKNOWN', 'CU_CTX_SCHED_SPIN',
           'CUDA_ERROR_INVALID_HANDLE',
           'CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X',
           'CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y',
           'CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z', 'CUcontext',
           'CUdevice_attribute_enum', 'CU_AD_FORMAT_FLOAT',
           'cuTexRefDestroy', 'cuLaunchGridAsync',
           'CU_TR_FILTER_MODE_LINEAR',
           'CU_DEVICE_ATTRIBUTE_CLOCK_RATE', 'CUmod_st',
           'cuArray3DCreate', 'cuModuleUnload', 'cuInit',
           'cuMemsetD32', 'cuMemcpyDtoHAsync', 'CUDA_MEMCPY3D_st',
           'CU_TR_ADDRESS_MODE_CLAMP', 'cuFuncSetBlockShape',
           'cuDeviceGetAttribute',
           'CUDA_ERROR_CONTEXT_ALREADY_CURRENT', 'CUctx_flags',
           'cuModuleLoad', 'CUDA_MEMCPY3D', 'cuStreamDestroy',
           'CUDA_ARRAY_DESCRIPTOR', 'cuTexRefSetFlags',
           'CU_AD_FORMAT_SIGNED_INT32', 'CUdevice_attribute',
           'cuModuleLoadData', 'cuModuleLoadFatBinary',
           'cuCtxGetDevice', 'CUmodule', 'CUdeviceptr',
           'CU_TR_ADDRESS_MODE_MIRROR', 'CUDA_ERROR_ALREADY_MAPPED',
           'cuParamSetTexRef',
           'CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING',
           'CUDA_ERROR_LAUNCH_FAILED', 'CU_AD_FORMAT_SIGNED_INT8',
           'cuLaunch', 'CUfilter_mode',
           'CUDA_ERROR_NO_BINARY_FOR_GPU', 'CUDA_ERROR_DEINITIALIZED',
           'CU_MEMORYTYPE_ARRAY', 'cuTexRefSetFilterMode',
           'cuParamSeti', 'cuMemcpyDtoH', 'CUDA_ERROR_NOT_MAPPED',
           'CUDA_MEMCPY2D', 'cuEventCreate', 'cuDeviceGetProperties',
           'CUDA_SUCCESS', 'CUresult', 'cuCtxCreate', 'cuMemcpyDtoD',
           'cuMemcpy2DAsync', 'CU_CTX_SCHED_AUTO', 'cuMemcpy3D',
           'CUDA_ERROR_OUT_OF_MEMORY', 'CUDA_MEMCPY2D_st',
           'cuParamSetv',
           'CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK',
           'cuEventQuery', 'cuTexRefGetFilterMode', 'cuTexRefCreate',
           'CUDA_ERROR_MAP_FAILED', 'CUaddress_mode_enum',
           'cuMemcpyAtoA', 'cuMemAlloc', 'cuMemAllocPitch',
           'cuEventSynchronize', 'cuMemcpyAtoD',
           'cuModuleGetFunction', 'cudaError_enum', 'cuArrayCreate',
           'cuMemcpyAtoH', 'CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES',
           'CUDA_ERROR_INVALID_DEVICE', 'CUstream',
           'cuTexRefSetAddressMode', 'cuMemsetD2D32',
           'cuTexRefGetFlags', 'cuMemAllocHost', 'cuMemsetD2D8',
           'CUDA_ERROR_NOT_READY',
           'CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK', 'CUdevprop',
           'CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT']
